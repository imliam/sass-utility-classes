/*
|--------------------------------------------------------------------------
| Flex Display
|--------------------------------------------------------------------------
|
| Utilities for creating flex containers.
|
*/

.flex {
    display: flex;
}

.inline-flex {
    display: inline-flex;
}

/*
|--------------------------------------------------------------------------
| Flex Direction
|--------------------------------------------------------------------------
|
| Utilities for controlling the direction of flex items.
|
*/

.flex-row {
    flex-direction: row;
}

.flex-row-reverse {
    flex-direction: row-reverse;
}

.flex-col {
    flex-direction: column;
}

.flex-col-reverse {
    flex-direction: column-reverse;
}

/*
|--------------------------------------------------------------------------
| Flex Wrapping
|--------------------------------------------------------------------------
|
| Utilities for controlling how flex items wrap.
|
*/

.flex-no-wrap {
    flex-wrap: nowrap;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-wrap-reverse {
    flex-wrap: wrap-reverse;
}


/*
|--------------------------------------------------------------------------
| Align Items
|--------------------------------------------------------------------------
|
| Utilities for controlling how flex items are positioned along
| a container's cross axis.
|
*/

.items-stretch {
    align-items: stretch;
}

.items-start {
    align-items: flex-start;
}

.items-center {
    align-items: center;
}

.items-end {
    align-items: flex-end;
}

.items-baseline {
    align-items: baseline;
}


/*
|--------------------------------------------------------------------------
| Align Content
|--------------------------------------------------------------------------
|
| Utilities for controlling how lines are positioned
| in multi-line flex containers.
|
*/

.content-start {
    align-content: flex-start;
}

.content-center {
    align-content: center;
}

.content-end {
    align-content: flex-end;
}

.content-between {
    align-content: space-between;
}

.content-around {
    align-content: space-around;
}

/*
|--------------------------------------------------------------------------
| Align Self
|--------------------------------------------------------------------------
|
| Utilities for controlling how an individual flex item is positioned
| along its container's cross axis.
|
*/

.self-auto {
    align-self: auto;
}

.self-start {
    align-self: flex-start;
}

.self-center {
    align-self: center;
}

.self-end {
    align-self: flex-end;
}

.self-stretch {
    align-self: stretch;
}

/*
|--------------------------------------------------------------------------
| Justify Content
|--------------------------------------------------------------------------
|
| Utilities for controlling flex items are positioned along
| a container's main axis.
|
*/

.justify-start {
    justify-content: flex-start;
}

.justify-center {
    justify-content: center;
}

.justify-end {
    justify-content: flex-end;
}

.justify-between {
    justify-content: space-between;
}

.justify-around {
    justify-content: space-around;
}

/*
|--------------------------------------------------------------------------
| Flex, Grow & Shrink
|--------------------------------------------------------------------------
|
| Utilities for controlling how flex items grow and shrink.
|
*/

.flex-initial {
    flex: initial;
}

.flex-1 {
    flex: 1;
}

.flex-auto {
    flex: auto;
}

.flex-none {
    flex: none;
}

.flex-grow {
    flex-grow: 1;
}

.flex-shrink {
    flex-shrink: 1;
}

.flex-no-grow {
    flex-grow: 0;
}

.flex-no-shrink {
    flex-shrink: 0;
}
