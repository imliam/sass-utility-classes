/*
|--------------------------------------------------------------------------
| Filters
|--------------------------------------------------------------------------
|
| Utility classes for various CSS filters that can be combined together
| using CSS variables. When using, the `.filter` class must be used,
| on an element along with another such as `.filter-blur-1` to set
| the filter.
|
*/

$filters: (
    "blur": "px",
    "brightness": "%",
    "contrast": "%",
    "grayscale": "%",
    "hue-rotate": "deg",
    "invert": "%",
    "opacity": "%",
    "saturate": "%",
    "sepia": "%",
);

$filter-levels: (
    "%": (0 10 20 30 40 50 60 70 80 90 100 200),
    "deg": (0 45 90 135 180 225 270 315 360),
    "px": (0, 1, 2, 3, 4, 5, 10),
);

:root {
    --filter-blur: 0;
    --filter-brightness: 100%;
    --filter-contrast: 100%;
    --filter-grayscale: 0%;
    --filter-hue-rotate: 0deg;
    --filter-invert: 0%;
    --filter-opacity: 100%;
    --filter-saturate: 100%;
    --filter-sepia: 0%;
}

// Note: Some of these filter definitions, such as grayscale, invert and opacity
// are escaped as strings. This is so as to not cause conflicts between CSS
// filter names that share the same names as native Sass function.

.filter {
    filter: blur(var(--filter-blur))
            brightness(var(--filter-brightness))
            contrast(var(--filter-contrast))
            #{"grayscale"}(var(--filter-grayscale))
            hue-rotate(var(--filter-hue-rotate))
            #{"invert"}(var(--filter-invert))
            #{"opacity"}(var(--filter-opacity))
            saturate(var(--filter-saturate))
            sepia(var(--filter-sepia));
}

@each $filter, $unit in $filters {
    @each $filter-level in map-get($filter-levels, $unit) {
        .filter-#{$filter}-#{$filter-level} {
            --filter-#{$filter}: #{$filter-level}#{$unit};
        }
    }
}

.no-filter {
    filter: none;
}
